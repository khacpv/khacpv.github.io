{"version":3,"sources":["components/tetrix/Scoreboard.js","components/tetrix/Shape.js","components/tetrix/gamepad/index.js","components/tetrix/index.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Scoreboard","reset","this","setTopscore","level","lines","score","gameOver","setGameOver","isGameOver","topscore","getTopscore","getSpeed","addScore","sc","addLines","line","addLevel","MAXLEVEL","getLevel","getLines","getScore","Shapes","ZShape","SShape","IShape","TShape","Square","LShape","JShape","Shape","shape","o","pos","Array","i","length","slice","ordinal","GamePad","props","onPressed","onReleased","className","onMouseUp","key","onMouseDown","React","Component","Tetrix","onKeyUp","event","keyDown","fastDown","onKeyDown","scoreboard","canRotate","fallingShape","rotate","canMove","left","move","right","down","draw","shapeHasLanded","initCavas","canvas","Error","width","height","g","getContext","s","forEach","row","tmp","every","p","newCol","fallingShapeCol","newRow","fallingShapeRow","grid","dir","y","x","addShape","removeLines","selectShape","removeLine","c","nCols","r","getRandomShape","keys","Object","ord","Math","floor","random","nextShape","clearRect","drawUI","drawStartScreen","drawFallingShape","font","mainFont","fillStyle","textColor","fillText","titleX","titleY","smallFont","clickX","clickY","fillRect","color","w","h","drawRect","strokeStyle","strokeRect","drawSquare","colorIndex","bs","blockSize","colors","leftMargin","topMargin","lineWidth","smallStroke","squareBorder","outerRect","bgColor","gridRect","gridColor","nRows","idx","largeStroke","gridBorderColor","previewRect","scoreX","scoreY","minX","minY","maxX","maxY","min","max","cx","previewCenterX","cy","previewCenterY","translate","animate","lastFrameTime","requestId","requestAnimationFrame","state","pausing","time","Date","getTime","delay","cancelAnimationFrame","pauseGame","setState","resumeGame","startNewGame","initGrid","fill","arr","value","dim","titleRect","clickRect","titlebgColor","window","addEventListener","count","ref","elem","onClick","evt","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78772211.chunk.js","sourcesContent":["class Scoreboard {\n  constructor() {\n    this.MAXLEVEL = 9;\n\n    this.level = 0;\n    this.lines = 0;\n    this.score = 0;\n    this.topscore = 0;\n    this.gameOver = true;\n  }\n\n  reset = function() {\n    this.setTopscore();\n    this.level = this.lines = this.score = 0;\n    this.gameOver = false;\n  };\n\n  setGameOver = function() {\n    this.gameOver = true;\n  };\n\n  isGameOver = function() {\n    return this.gameOver;\n  };\n\n  setTopscore = function() {\n    if (this.score > this.topscore) {\n      this.topscore = this.score;\n    }\n  };\n\n  getTopscore = function() {\n    return this.topscore;\n  };\n\n  getSpeed = function() {\n    switch (this.level) {\n      case 0:\n        return 700;\n      case 1:\n        return 600;\n      case 2:\n        return 500;\n      case 3:\n        return 400;\n      case 4:\n        return 350;\n      case 5:\n        return 300;\n      case 6:\n        return 250;\n      case 7:\n        return 200;\n      case 8:\n        return 150;\n      case 9:\n        return 100;\n      default:\n        return 100;\n    }\n  };\n\n  addScore = function(sc) {\n    this.score += sc;\n  };\n\n  addLines = function(line) {\n    switch (line) {\n      case 1:\n        this.addScore(10);\n        break;\n      case 2:\n        this.addScore(20);\n        break;\n      case 3:\n        this.addScore(30);\n        break;\n      case 4:\n        this.addScore(40);\n        break;\n      default:\n        return;\n    }\n\n    this.lines += line;\n    if (this.lines > 10) {\n      this.addLevel();\n    }\n  };\n\n  addLevel = function() {\n    this.lines %= 10;\n    if (this.level < this.MAXLEVEL) {\n      this.level++;\n    }\n  };\n\n  getLevel = function() {\n    return this.level;\n  };\n\n  getLines = function() {\n    return this.lines;\n  };\n\n  getScore = function() {\n    return this.score;\n  };\n}\n\nexport default Scoreboard;\n","class Shape {\n  constructor(shape, o) {\n    this.shape = shape;\n    this.pos = this.reset();\n    this.ordinal = o;\n  }\n  reset = () => {\n    this.pos = new Array(4);\n    for (var i = 0; i < this.pos.length; i++) {\n      this.pos[i] = this.shape[i].slice();\n    }\n    return this.pos;\n  };\n}\n\nexport const Shapes = {\n  ZShape: [\n    [0, -1],\n    [0, 0],\n    [-1, 0],\n    [-1, 1]\n  ],\n  SShape: [\n    [0, -1],\n    [0, 0],\n    [1, 0],\n    [1, 1]\n  ],\n  IShape: [\n    [0, -1],\n    [0, 0],\n    [0, 1],\n    [0, 2]\n  ],\n  TShape: [\n    [-1, 0],\n    [0, 0],\n    [1, 0],\n    [0, 1]\n  ],\n  Square: [\n    [0, 0],\n    [1, 0],\n    [0, 1],\n    [1, 1]\n  ],\n  LShape: [\n    [-1, -1],\n    [0, -1],\n    [0, 0],\n    [0, 1]\n  ],\n  JShape: [\n    [1, -1],\n    [0, -1],\n    [0, 0],\n    [0, 1]\n  ]\n};\n\nexport default Shape;\n","import React from 'react';\nimport './index.css';\n\nclass GamePad extends React.Component {\n  render() {\n    const { onPressed, onReleased } = this.props;\n    return (\n      <div className=\"game-pad\">\n        <div\n          className=\"ctrl ctrl-up\"\n          onMouseUp={() => {\n            onReleased({ key: 'w' });\n          }}\n          onMouseDown={() => {\n            onPressed({ key: 'w' });\n          }}\n        >\n          ROTATE\n        </div>\n        <div\n          className=\"ctrl ctrl-left\"\n          onMouseUp={() => {\n            onReleased({ key: 'a' });\n          }}\n          onMouseDown={() => {\n            onPressed({ key: 'a' });\n          }}\n        >\n          LEFT\n        </div>\n        <div\n          className=\"ctrl ctrl-right\"\n          onMouseUp={() => {\n            onReleased({ key: 'd' });\n          }}\n          onMouseDown={() => {\n            onPressed({ key: 'd' });\n          }}\n        >\n          RIGHT\n        </div>\n        <div\n          className=\"ctrl ctrl-down\"\n          onMouseUp={() => {\n            onReleased({ key: 's' });\n          }}\n          onMouseDown={() => {\n            onPressed({ key: 's' });\n          }}\n        >\n          DOWN\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GamePad;\n","import React from 'react';\nimport './tetrix.css';\nimport Scoreboard from './Scoreboard';\nimport Shape, { Shapes } from './Shape';\nimport GamePad from './gamepad/index';\n\nconst EMPTY = -1;\nconst BORDER = -2;\n\nclass Tetrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = null;\n    this.g = null; // canvas context\n\n    this.right = { x: 1, y: 0 };\n    this.down = { x: 0, y: 1 };\n    this.left = { x: -1, y: 0 };\n\n    this.fallingShape = null;\n    this.nextShape = null;\n    this.dim = 640;\n    this.nRows = 18;\n    this.nCols = 12;\n\n    this.blockSize = 30;\n    this.topMargin = 50;\n    this.leftMargin = 20;\n    this.scoreX = 400;\n    this.scoreY = 330;\n    this.titleX = 100;\n    this.titleY = 160;\n    this.clickX = 120;\n    this.clickY = 400;\n    this.previewCenterX = 467;\n    this.previewCenterY = 97;\n    this.mainFont = 'bold 48px monospace';\n    this.smallFont = 'bold 18px monospace';\n    this.colors = [\n      'green',\n      'red',\n      'blue',\n      'purple',\n      'orange',\n      'blueviolet',\n      'magenta'\n    ];\n    this.gridRect = { x: 46, y: 47, w: 308, h: 517 };\n    this.previewRect = { x: 387, y: 47, w: 200, h: 200 };\n    this.titleRect = { x: 85, y: 95, w: 252, h: 100 };\n    this.clickRect = { x: 50, y: 375, w: 252, h: 40 };\n    this.outerRect = { x: 5, y: 5, w: 630, h: 630 };\n    this.squareBorder = 'white';\n    this.titlebgColor = 'white';\n    this.textColor = 'black';\n    this.bgColor = '#DDEEFF';\n    this.gridColor = '#BECFEA';\n    this.gridBorderColor = '#7788AA';\n    this.largeStroke = 5;\n    this.smallStroke = 2;\n\n    // position of falling shape\n    this.fallingShapeRow = 0;\n    this.fallingShapeCol = 0;\n\n    this.keyDown = false;\n    this.fastDown = false;\n\n    this.grid = [];\n    this.scoreboard = new Scoreboard();\n    this.state = {\n      pausing: false\n    };\n  }\n\n  componentDidMount() {\n    this.initCavas();\n\n    this.initGrid();\n    this.selectShape();\n    this.draw();\n\n    window.addEventListener('keyup', this.onKeyUp);\n    window.addEventListener('keydown', this.onKeyDown);\n  }\n  onKeyUp = event => {\n    this.keyDown = false;\n    this.fastDown = false;\n  };\n  onKeyDown = event => {\n    if (!this.keyDown) {\n      this.keyDown = true;\n\n      if (this.scoreboard.isGameOver()) return;\n      switch (event.key) {\n        case 'w':\n        case 'ArrowUp':\n          if (this.canRotate(this.fallingShape)) this.rotate(this.fallingShape);\n          break;\n        case 'a':\n        case 'ArrowLeft':\n          if (this.canMove(this.fallingShape, this.left)) this.move(this.left);\n          break;\n\n        case 'd':\n        case 'ArrowRight':\n          if (this.canMove(this.fallingShape, this.right))\n            this.move(this.right);\n          break;\n\n        case 's':\n        case 'ArrowDown':\n          if (!this.fastDown) {\n            this.fastDown = true;\n            while (this.canMove(this.fallingShape, this.down)) {\n              this.move(this.down);\n              this.draw();\n            }\n            this.shapeHasLanded();\n          }\n          break;\n        default:\n          break;\n      }\n      this.draw();\n    }\n  };\n  initCavas = () => {\n    if (!this.canvas) {\n      throw new Error('Canvas not found');\n    }\n    this.canvas.width = 640;\n    this.canvas.height = 640;\n\n    this.g = this.canvas.getContext('2d');\n  };\n  canRotate = s => {\n    if (s === Shapes.Square) return false;\n\n    var pos = new Array(4);\n    for (var i = 0; i < pos.length; i++) {\n      pos[i] = s.pos[i].slice();\n    }\n\n    pos.forEach(row => {\n      var tmp = row[0];\n      row[0] = row[1];\n      row[1] = -tmp;\n    });\n\n    return pos.every(p => {\n      var newCol = this.fallingShapeCol + p[0];\n      var newRow = this.fallingShapeRow + p[1];\n      return this.grid[newRow][newCol] === EMPTY;\n    });\n  };\n  rotate = s => {\n    if (s === Shapes.Square) return;\n\n    s.pos.forEach(row => {\n      var tmp = row[0];\n      row[0] = row[1];\n      row[1] = -tmp;\n    });\n  };\n  move = dir => {\n    this.fallingShapeRow += dir.y;\n    this.fallingShapeCol += dir.x;\n  };\n  canMove = (s, dir) => {\n    return s.pos.every(p => {\n      var newCol = this.fallingShapeCol + dir.x + p[0];\n      var newRow = this.fallingShapeRow + dir.y + p[1];\n      return this.grid[newRow][newCol] === EMPTY;\n    });\n  };\n  shapeHasLanded = () => {\n    this.addShape(this.fallingShape);\n    if (this.fallingShapeRow < 2) {\n      this.scoreboard.setGameOver();\n      this.scoreboard.setTopscore();\n    } else {\n      this.scoreboard.addLines(this.removeLines());\n    }\n    this.selectShape();\n  };\n  removeLines() {\n    var count = 0;\n    for (var r = 0; r < this.nRows - 1; r++) {\n      for (var c = 1; c < this.nCols - 1; c++) {\n        if (this.grid[r][c] === EMPTY) break;\n        if (c === this.nCols - 2) {\n          count++;\n          this.removeLine(r);\n        }\n      }\n    }\n    return count;\n  }\n  removeLine = line => {\n    for (let c = 0; c < this.nCols; c++) this.grid[line][c] = EMPTY;\n\n    for (let c = 0; c < this.nCols; c++) {\n      for (var r = line; r > 0; r--) this.grid[r][c] = this.grid[r - 1][c];\n    }\n  };\n  addShape = s => {\n    s.pos.forEach(p => {\n      this.grid[this.fallingShapeRow + p[1]][this.fallingShapeCol + p[0]] =\n        s.ordinal;\n    });\n  };\n  getRandomShape = () => {\n    var keys = Object.keys(Shapes);\n    var ord = Math.floor(Math.random() * keys.length);\n    var shape = Shapes[keys[ord]];\n    return new Shape(shape, ord);\n  };\n  selectShape = () => {\n    this.fallingShapeRow = 1;\n    this.fallingShapeCol = 5;\n    this.fallingShape = this.nextShape;\n    this.nextShape = this.getRandomShape();\n    if (this.fallingShape != null) {\n      this.fallingShape.reset();\n    }\n  };\n  draw = () => {\n    this.g.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.drawUI();\n\n    if (this.scoreboard.isGameOver()) {\n      this.drawStartScreen();\n    } else {\n      this.drawFallingShape();\n    }\n  };\n  drawStartScreen = () => {\n    this.g.font = this.mainFont;\n\n    // this.fillRect(this.titleRect, this.titlebgColor);\n    // this.fillRect(this.clickRect, this.titlebgColor);\n\n    this.g.fillStyle = this.textColor;\n    this.g.fillText('Tetris', this.titleX, this.titleY);\n\n    this.g.font = this.smallFont;\n    this.g.fillText('RESET to start', this.clickX, this.clickY);\n  };\n  fillRect = (r, color) => {\n    this.g.fillStyle = color;\n    this.g.fillRect(r.x, r.y, r.w, r.h);\n  };\n\n  drawRect = (r, color) => {\n    this.g.strokeStyle = color;\n    this.g.strokeRect(r.x, r.y, r.w, r.h);\n  };\n  drawSquare = (colorIndex, r, c) => {\n    var bs = this.blockSize;\n    this.g.fillStyle = this.colors[colorIndex];\n    this.g.fillRect(this.leftMargin + c * bs, this.topMargin + r * bs, bs, bs);\n\n    this.g.lineWidth = this.smallStroke;\n    this.g.strokeStyle = this.squareBorder;\n    this.g.strokeRect(\n      this.leftMargin + c * bs,\n      this.topMargin + r * bs,\n      bs,\n      bs\n    );\n  };\n  drawUI = () => {\n    // background\n    this.fillRect(this.outerRect, this.bgColor);\n    this.fillRect(this.gridRect, this.gridColor);\n\n    // the blocks dropped in the grid\n    for (var r = 0; r < this.nRows; r++) {\n      for (var c = 0; c < this.nCols; c++) {\n        var idx = this.grid[r][c];\n        if (idx > EMPTY) this.drawSquare(idx, r, c);\n      }\n    }\n\n    // the borders of grid and preview panel\n    this.g.lineWidth = this.largeStroke;\n    this.drawRect(this.gridRect, this.gridBorderColor);\n    this.drawRect(this.previewRect, this.gridBorderColor);\n    // this.drawRect(this.outerRect, this.gridBorderColor);\n\n    // scoreboard\n    this.g.fillStyle = this.textColor;\n    this.g.font = this.smallFont;\n    this.g.fillText(\n      'hiscore    ' + this.scoreboard.getTopscore(),\n      this.scoreX,\n      this.scoreY\n    );\n    this.g.fillText(\n      'level      ' + this.scoreboard.getLevel(),\n      this.scoreX,\n      this.scoreY + 30\n    );\n    this.g.fillText(\n      'lines      ' + this.scoreboard.getLines(),\n      this.scoreX,\n      this.scoreY + 60\n    );\n    this.g.fillText(\n      'score      ' + this.scoreboard.getScore(),\n      this.scoreX,\n      this.scoreY + 90\n    );\n\n    // preview\n    var minX = 5,\n      minY = 5,\n      maxX = 0,\n      maxY = 0;\n    this.nextShape.pos.forEach(p => {\n      minX = Math.min(minX, p[0]);\n      minY = Math.min(minY, p[1]);\n      maxX = Math.max(maxX, p[0]);\n      maxY = Math.max(maxY, p[1]);\n    });\n    var cx = this.previewCenterX - ((minX + maxX + 1) / 2.0) * this.blockSize;\n    var cy = this.previewCenterY - ((minY + maxY + 1) / 2.0) * this.blockSize;\n\n    this.g.translate(cx, cy);\n    this.nextShape.shape.forEach(p => {\n      this.drawSquare(this.nextShape.ordinal, p[1], p[0]);\n    });\n    this.g.translate(-cx, -cy);\n  };\n  drawFallingShape() {\n    var idx = this.fallingShape.ordinal;\n    this.fallingShape.pos.forEach(p => {\n      this.drawSquare(\n        idx,\n        this.fallingShapeRow + p[1],\n        this.fallingShapeCol + p[0]\n      );\n    });\n  }\n  animate = lastFrameTime => {\n    var requestId = requestAnimationFrame(() => {\n      this.animate(lastFrameTime);\n    });\n\n    if (this.state.pausing) {\n      return;\n    }\n\n    var time = new Date().getTime();\n    var delay = this.scoreboard.getSpeed();\n\n    if (lastFrameTime + delay < time) {\n      if (!this.scoreboard.isGameOver()) {\n        if (this.canMove(this.fallingShape, this.down)) {\n          this.move(this.down);\n        } else {\n          this.shapeHasLanded();\n        }\n        this.draw();\n        lastFrameTime = time;\n      } else {\n        cancelAnimationFrame(requestId);\n      }\n    }\n  };\n  pauseGame = () => {\n    this.setState({ pausing: true });\n  };\n  resumeGame = () => {\n    this.setState({ pausing: false });\n  };\n  startNewGame = () => {\n    this.setState({ pausing: false });\n    this.initGrid();\n    this.selectShape();\n    this.scoreboard.reset();\n    this.animate(-1);\n  };\n  initGrid = () => {\n    const fill = (arr, value) => {\n      for (var i = 0; i < arr.length; i++) {\n        arr[i] = value;\n      }\n    };\n    for (var r = 0; r < this.nRows; r++) {\n      this.grid[r] = new Array(this.nCols);\n      fill(this.grid[r], EMPTY);\n      for (var c = 0; c < this.nCols; c++) {\n        if (c === 0 || c === this.nCols - 1 || r === this.nRows - 1)\n          this.grid[r][c] = BORDER;\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"game-manager\">\n        <div className=\"game-container\">\n          <div className=\"game-content\">\n            <canvas\n              ref={elem => {\n                this.canvas = elem;\n              }}\n            ></canvas>\n          </div>\n        </div>\n        <div className=\"row\">\n          <button className=\"btn btn-restart\" onClick={this.startNewGame}>\n            Reset\n          </button>\n          {!this.state.pausing && (\n            <button className={'btn btn-restart'} onClick={this.pauseGame}>\n              Pause\n            </button>\n          )}\n          {this.state.pausing && (\n            <button className={'btn btn-restart'} onClick={this.resumeGame}>\n              Resume\n            </button>\n          )}\n        </div>\n        <GamePad\n          onPressed={evt => {\n            this.onKeyDown(evt);\n          }}\n          onReleased={evt => {\n            this.onKeyUp(evt);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Tetrix;\n","import React from 'react';\nimport './App.css';\nimport Tetrix from '../tetrix/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tetrix />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}